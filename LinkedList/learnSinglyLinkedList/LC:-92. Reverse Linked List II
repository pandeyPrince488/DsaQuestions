/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        ListNode* dummyNode = new ListNode(0);
        dummyNode->next = head;

        // now put the prev into just before the left position

        ListNode* prev = dummyNode;
        for (int i = 0; i < left - 1; i++) {
            prev = prev->next;
        }

        ListNode* curr = prev->next;
        for(int i=0;i<right-left;i++)
        {
            //this is a standard logic to reverse the sublist 
            ListNode* nextNode=curr->next;
            curr->next=nextNode->next;
            nextNode->next=prev->next;
            prev->next=nextNode;
        }
        return dummyNode->next;
    }
};
