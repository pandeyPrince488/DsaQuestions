class Solution {
public:
    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
        int rows = matrix.size();
        int cols = matrix[0].size();
        int count = 0;
        for (int row = 0; row < rows; row++) {
            for (int col = 1; col < cols; col++) {
                matrix[row][col] += matrix[row][col - 1];
            }
        }

        for (int st = 0; st < cols; st++) {
            for (int col = st; col < cols; col++) {
                unordered_map<int, int> mp;
                mp[0] = 1;
                int sum = 0;
                for (int row = 0; row < rows; row++) {
                    sum +=
                        matrix[row][col] - (st > 0 ? matrix[row][st - 1] : 0);
                    if (mp.find(sum - target) != mp.end()) {
                        count += mp[sum - target];
                    }
                    mp[sum]++;
                }
            }
        }
        return count;
    }
};
