class Solution {
public:
    string minWindow(string s, string t) {
        unordered_map<char,int>mp;
        for(int i=0;i<t.length();i++)
        {
            char ch=t[i];
            mp[ch]++;
        }

        int requiredCount=t.length();
        int minWindow=INT_MAX;
        int i=0;
        int startIndex=0;
        for(int j=0;j<s.length();j++)
        {
            char ch=s[j];
            if(mp[ch]>0)
            {
               requiredCount--; 
            }
            mp[ch]--;
            while(requiredCount==0)
            {
                int currentWindow=j-i+1;
                if(minWindow>currentWindow)
                {
                    minWindow=currentWindow;
                    startIndex=i;
                }
                mp[s[i]]++;
                if(mp[s[i]]>0)
                {
                    requiredCount++;
                }
                i++;
            }
        }
        return minWindow==INT_MAX? "":s.substr(startIndex,minWindow);
    }
};
