??Brute force 
Time Complexity :-(n*m)
spcaceComplexity :-0(1)
class Solution {
  public:
    int rowWithMax1s(vector<vector<int>> &arr) {
        int maximumOnes=0;
        int maximumOnesIndex=-1;
        for(int i=0;i<arr.size();i++)
        {
            int currentCount=0;
            for(int j=0;j<arr[i].size();j++)
            {
                if(arr[i][j]==1)
                {
                    currentCount++;
                }
            }
            if(currentCount>maximumOnes)
            {
                maximumOnes=currentCount;
                maximumOnesIndex=i;
            }
        
        }
        return maximumOnesIndex;
    }
};

//Optimized approach 

class Solution {
  public:
  int findFirstOne(vector<int>&arr,int m,int x)
  {
      int start=0;
      int end=m-1;
      int result=m;
      while(start<=end)
      {
          int mid=start+(end-start)/2;
          if(arr[mid]==x)
          {
              result=mid;
              end=mid-1;
          }
          else if(arr[mid]<x)
          {
              start=mid+1;
          }
          else{
              end=mid-1;
          }
      }
      return result;
  }
    int rowWithMax1s(vector<vector<int>> &arr) {
        int maxiOnes=-1;
        int maxiOnesIndex=-1;
        
        for(int i=0;i<arr.size();i++)
        {
            int m=arr[i].size();
            int countOnes=m-findFirstOne(arr[i],m,1);
            
            if(countOnes>maxiOnes)
            {
                maxiOnes=countOnes;
                maxiOnesIndex=i;
            }
        }
        return maxiOnesIndex;
    }
};
