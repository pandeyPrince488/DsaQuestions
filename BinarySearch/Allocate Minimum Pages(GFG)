class Solution {
  public:
  bool isAllocationPossible(vector<int> &arr, int k,int currentPageLimit)
  {
      int students=1;
      int cummulativePage=0;
      for(int i=0;i<arr.size();i++)
      {
          if((cummulativePage+arr[i])<=currentPageLimit)
          {
           cummulativePage+=arr[i];
          }
          else{
              students++;
              cummulativePage=arr[i];
          }
      }
      return students<=k;
  }
    int findPages(vector<int> &arr, int k) {
        if(k>arr.size())return -1;
        int start=*max_element(arr.begin(),arr.end());
        int end=accumulate(arr.begin(),arr.end(),0);
        int result=-1;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(isAllocationPossible(arr,k,mid))
            {
                result=mid;
                end=mid-1;
            }
            else{
                start=mid+1;
            }
        }
        return result;
    }
};
