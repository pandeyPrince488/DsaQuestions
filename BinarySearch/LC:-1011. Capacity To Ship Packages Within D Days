class Solution {
public:
bool calculateDays(vector<int>& weights, int days,int currentWeightCapacity)
{
    int day=1;
    int weightSum=0;
    for(int weight:weights)
    {
        if((weightSum+weight)<=currentWeightCapacity)
        {
            weightSum+=weight;
        }
        else{
            day++;
            weightSum=weight;
        }
    }
    return day<=days;
}
    int shipWithinDays(vector<int>& weights, int days) {
        int start=*max_element(weights.begin(),weights.end());
        int end=accumulate(weights.begin(),weights.end(),0);
        int result=end;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(calculateDays(weights,days,mid))
            {
                result=mid;
                end=mid-1;
            }
            else
            {
                start=mid+1;
            }
        }
        return result;
    }
};
